.. include:: def.rst
.. index:: pair: group; Serial Communications
.. _doxid-group_serial:
.. _cid-serial:

Serial Communications
=====================

.. toctree::
	:hidden:

	enum_io_SerialEvents.rst
	enum_io_SerialFlowControl.rst
	enum_io_SerialOptions.rst
	enum_io_SerialParity.rst
	enum_io_SerialStatusLines.rst
	enum_io_SerialStopBits.rst
	struct_io_SerialPortDesc.rst
	class_io_Serial.rst

.. code-block:: jancy
	:class: overview-code-block

	import "io_base.jncx"
	import "io_Serial.jnc"


Overview
~~~~~~~~

This section describes types and facilities used when programming serial communicatins. :ref:`More...<details-doxid-group_serial>`

.. ref-code-block:: jancy
	:class: overview-code-block

	// enums

	bitflag enum :ref:`SerialEvents<doxid-type_io_serialevents>`
	enum :ref:`SerialFlowControl<doxid-type_io_serialflowcontrol>`
	bitflag enum :ref:`SerialOptions<doxid-type_io_serialoptions>`
	enum :ref:`SerialParity<doxid-type_io_serialparity>`
	bitflag enum :ref:`SerialStatusLines<doxid-type_io_serialstatuslines>`
	enum :ref:`SerialStopBits<doxid-type_io_serialstopbits>`

	// structs

	struct :ref:`io.SerialPortDesc<doxid-type_io_serialportdesc>` 

	// classes

	class :ref:`io.Serial<doxid-type_io_serial>` 

	// global functions

	:ref:`io.SerialPortDesc<doxid-type_io_serialportdesc>` const* :ref:`io.createSerialPortDescList<doxid-function_io_createserialportdesclist>` (:ref:`size_t<doxid-typedef_size_t>`* count = null)

.. _details-doxid-group_serial:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

This section describes types and facilities used when programming serial communicatins.

Global Functions
----------------

.. _doxid-function_io_createserialportdesclist:
.. _cid-io.createserialportdesclist:
.. ref-code-block:: jancy
	:class: title-code-block

	:ref:`io.SerialPortDesc<doxid-type_io_serialportdesc>` const* io.createSerialPortDescList (:ref:`size_t<doxid-typedef_size_t>`* count = null)

Enumerates all available serial ports.

``count`` argument can be used to obtain the total number of devices in the
resulting list.

Returns a pointer to the very first `io.SerialPortDesc` in the resulting
list. You can walk through the list by inspecting `io.SerialPortDesc.m_next`
field:

.. ref-code-block::

    `io.SerialPortDesc` const* portDesc = io.createSerialPortDescList ();
    for (; portDesc; portDesc = portDesc.m_next)
    {
        // add port to the combo box...
    }

