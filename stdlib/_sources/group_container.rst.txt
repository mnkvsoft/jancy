.. include:: def.rst
.. index:: pair: group; Containers & Collections
.. _doxid-group_container:
.. _cid-container:

Containers & Collections
========================

.. toctree::
	:hidden:

	enum_std_BinTreeFindRelOp.rst
	struct_std_ListEntry.rst
	struct_std_MapEntry.rst
	class_std_Array.rst
	class_std_Buffer.rst
	class_std_HashTable.rst
	class_std_List.rst
	class_std_RbTree.rst
	class_std_StringBuilder.rst
	class_std_StringHashTable.rst
	class_std_StringHashTableIgnoreCase.rst

.. code-block:: jancy
	:class: overview-code-block

	import "std_Array.jnc"
	import "std_Buffer.jnc"
	import "std_List.jnc"
	import "std_HashTable.jnc"
	import "std_RbTree.jnc"
	import "std_String.jnc"


This section describes types for holding structured collections of other objects.

.. _doxid-typedef_std_hashfunc:
.. _cid-std.hashfunc:
.. _doxid-typedef_std_isequalfunc:
.. _cid-std.isequalfunc:
.. _doxid-typedef_std_cmpfunc:
.. _cid-std.cmpfunc:
.. ref-code-block:: jancy
	:class: overview-code-block

	// typedefs

	typedef :ref:`size_t<doxid-typedef_size_t>` std.HashFunc (variant key)

	typedef bool std.IsEqualFunc (
	    variant key1,
	    variant key2
	    )

	typedef int std.CmpFunc (
	    variant key1,
	    variant key2
	    )

	// enums

	enum :ref:`BinTreeFindRelOp<doxid-type_std_bintreefindrelop>`

	// structs

	struct :ref:`std.ListEntry<doxid-type_std_listentry>` 
	struct :ref:`std.MapEntry<doxid-type_std_mapentry>` 

	// classes

	class :ref:`std.Array<doxid-type_std_array>` 
	class :ref:`std.Buffer<doxid-type_std_buffer>` 
	class :ref:`std.HashTable<doxid-type_std_hashtable>` 
	class :ref:`std.List<doxid-type_std_list>` 
	class :ref:`std.RbTree<doxid-type_std_rbtree>` 
	class :ref:`std.StringBuilder<doxid-type_std_stringbuilder>` 
	class :ref:`std.StringHashTable<doxid-type_std_stringhashtable>` 
	class :ref:`std.StringHashTableIgnoreCase<doxid-type_std_stringhashtableignorecase>` 

