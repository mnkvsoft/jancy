.. include:: def.rst
.. index:: pair: enum; io.MailslotEvents
.. _doxid-type_io_mailslotevents:
.. _cid-io.mailslotevents:

bitflag enum io.MailslotEvents
==============================

.. code-block:: jancy
	:class: overview-code-block

	import "io_base.jncx"
	import "io_Mailslot.jnc"


Overview
~~~~~~~~

This enumeration contains codes of all possible events that might
happen on `io.Mailslot` object. The set of *active* events is accessible
via `io.Mailslot.m_activeEvents`. :ref:`More...<details-doxid-type_io_mailslotevents>`

.. ref-code-block:: jancy
	:class: overview-code-block

	// enum values

	:ref:`IoError<doxid-enum_member_io_mailslotevents_ioerror>` 
	:ref:`IncomingData<doxid-enum_member_io_mailslotevents_incomingdata>` 
	:ref:`ReadBufferFull<doxid-enum_member_io_mailslotevents_readbufferfull>` 

.. _details-doxid-type_io_mailslotevents:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

This enumeration contains codes of all possible events that might
happen on `io.Mailslot` object. The set of *active* events is accessible
via `io.Mailslot.m_activeEvents`.



.. rubric:: See also:

`io.Mailslot`

Enum Values
-----------

.. _doxid-enum_member_io_mailslotevents_ioerror:
.. _cid-io.mailslotevents.ioerror:
.. ref-code-block:: jancy
	:class: title-code-block

	IoError

An IO error occured on the mailslot; detailed information about the
error is available at `io.Mailslot.m_ioError`.

.. _doxid-enum_member_io_mailslotevents_incomingdata:
.. _cid-io.mailslotevents.incomingdata:
.. ref-code-block:: jancy
	:class: title-code-block

	IncomingData

More data is available on the mailslot; this data could be fetched with
`io.Mailslot.read` method.

.. _doxid-enum_member_io_mailslotevents_readbufferfull:
.. _cid-io.mailslotevents.readbufferfull:
.. ref-code-block:: jancy
	:class: title-code-block

	ReadBufferFull

Mailslot receive buffer is full.

